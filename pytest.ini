[pytest]
# Display detailed test information
addopts = -v --cov=gmoo_sdk --cov-report=term-missing --cov-report=html --cov-report=xml

# Look for tests in these directories
testpaths = tests

# Pattern to identify test files
python_files = test_*.py

# Pattern to identify test classes
python_classes = Test*

# Pattern to identify test functions
python_functions = test_*

# Log information during test execution
log_cli = True
log_cli_level = WARNING
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Log capture settings for failed tests
log_level = INFO

# Create JUnit XML report for CI/CD integration
junit_family = xunit2

# Register custom markers to avoid warnings
markers =
    nonlinearity: Tests the nonlinearity functionality
    inverse: Tests the inverse optimization functionality
    encapsulation: Tests the high-level encapsulation functions
    workflow: Tests complete optimization workflows
    slow: Tests that take a long time to run
    quick: Tests that run quickly
    requires_dll: Tests that require the GMOO DLL to be present
    unit: Unit tests that don't require external dependencies
    integration: Integration tests that require full environment setup

[coverage:run]
# Source code to measure coverage for
source = src

# Omit these files/directories from coverage
omit = 
    */tests/*
    */test_*
    */setup.py
    */__init__.py
    */site-packages/*
    */dist-packages/*
    */.venv/*
    */venv/*
    */examples/*
    */trash/*

# Enable branch coverage
branch = True

# Parallel coverage collection (useful for multiprocess testing)
parallel = False

# Include namespace packages
source_pkgs = gmoo_sdk

[coverage:report]
# Precision for coverage percentages
precision = 2

# Minimum coverage percentage required
fail_under = 70

# Skip files with no executable code
skip_empty = True

# Exclude these lines from coverage
exclude_lines =
    # Standard pragma
    pragma: no cover
    
    # Don't complain about missing debug-only code
    def __repr__
    def __str__
    
    # Don't complain if tests don't hit defensive assertion code
    raise AssertionError
    raise NotImplementedError
    
    # Don't complain if non-runnable code isn't run
    if 0:
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    
    # Don't complain about abstract methods
    @abstractmethod
    @abc.abstractmethod
    
    # Ignore type checking imports
    if TYPE_CHECKING:
    
    # Ignore property setters/getters often
    @property
    @.*.setter
    @.*.deleter
    
    # Ignore protocol definitions
    class .*\(Protocol\):
    
    # Ignore test utilities
    def test_
    class Test

# Ignore missing files
ignore_errors = True

# Sort the report by coverage percentage
sort = Cover

[coverage:html]
# Directory for HTML coverage report
directory = htmlcov

# Title for the report
title = GMOO SDK Python Coverage Report

# Show line numbers that are missing coverage
show_contexts = True

[coverage:xml]
# Output file for XML coverage report
output = coverage.xml

[coverage:paths]
# Map coverage paths for different environments
source =
    src/gmoo_sdk/
    */src/gmoo_sdk/
    */site-packages/gmoo_sdk/

[coverage:json]
# Output file for JSON coverage report (useful for custom tools)
output = coverage.json

# Pretty print JSON
pretty_print = True

# Show contexts
show_contexts = True
